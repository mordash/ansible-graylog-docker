---
- name: "install | graylog | create docker-compose directory"
  file:
    path: /opt/docker-compose/graylog
    state: directory
    mode: '0755'

- name: 'install | graylog | copy docker-compose file'
  template:
    src: compose/graylog.yml.j2
    dest: "/opt/docker-compose/graylog/docker-compose.yml"
    owner: root
    group: root
    mode: 0644

- name: 'install | graylog | copy .env file'
  template:
    src: compose/.env.j2
    dest: "/opt/docker-compose/graylog/.env"
    owner: root
    group: root
    mode: 0644
    force: no

- name: 'install | graylog secret | check presence secret in .env file'
  lineinfile:
    state: absent
    path: /opt/docker-compose/graylog/.env
    regexp: '^GRAYLOG_PASSWORD_SECRET='
  check_mode: yes
  changed_when: false
  register: reg_graylog_env_secret_presence
- debug:
    msg: "GRAYLOG_PASSWORD_SECRET exists."
  when: reg_graylog_env_secret_presence.found
- debug:
    msg: "GRAYLOG_PASSWORD_SECRET does NOT exist."
  when: not reg_graylog_env_secret_presence.found

- name: 'install | graylog secret | generate secret graylog env file'
  command: pwgen -N 1 -s 96
  register: reg_graylog_env_secret
  when: not reg_graylog_env_secret_presence.found

- name: 'install | graylog secret | define secret into .env file'
  lineinfile:
    path: /opt/docker-compose/graylog/.env
    regexp: '^GRAYLOG_PASSWORD_SECRET='
    line: GRAYLOG_PASSWORD_SECRET="{{ reg_graylog_env_secret.stdout }}"
    insertafter: '^# GRAYLOG_PASSWORD_SECRET'
  when: reg_graylog_env_secret is defined and reg_graylog_env_secret.changed == True


- name: 'install | graylog secret | check root password presence in .env file'
  lineinfile:
    state: absent
    path: /opt/docker-compose/graylog/.env
    regexp: '^GRAYLOG_ROOT_PASSWORD_SHA2='
  check_mode: yes
  changed_when: false
  register: reg_graylog_env_password_presence
- debug:
    msg: "GRAYLOG_ROOT_PASSWORD_SHA2 exists."
  when: reg_graylog_env_password_presence.found
- debug:
    msg: "GRAYLOG_ROOT_PASSWORD_SHA2 does NOT exist."
  when: not reg_graylog_env_password_presence.found

- name: 'install | graylog password | generate root password into graylog .env file'
  shell: "echo -n {{ GRAYLOG_ROOT_PASSWORD_SHA2_password }} | shasum -a 256 | awk '{print $1}'"
  register: reg_GRAYLOG_ROOT_PASSWORD_SHA2_password
  when: not reg_graylog_env_password_presence.found

- name: 'install | graylog | define root password into .env file'
  lineinfile:
    path: /opt/docker-compose/graylog/.env
    regexp: '^GRAYLOG_ROOT_PASSWORD_SHA2='
    line: GRAYLOG_ROOT_PASSWORD_SHA2="{{ reg_GRAYLOG_ROOT_PASSWORD_SHA2_password.stdout }}"
    insertafter: '^# GRAYLOG_ROOT_PASSWORD_SHA2'
  when: reg_GRAYLOG_ROOT_PASSWORD_SHA2_password is defined and reg_GRAYLOG_ROOT_PASSWORD_SHA2_password.changed == True


- name: 'install | graylog | create graylogs networks'
  docker_network:
    name: graylog

- name: 'install | graylog | create graylogs volumes'
  docker_volume:
    name: "{{ item }}"
  with_items:
    - graylog_mongodb_data
    - graylog_os_data
    - graylog_data
    - graylog_journal

- name: 'install | graylog | install unit file'
  template:
    src: systemd/docker-compose.service.j2
    dest: "/etc/systemd/system/docker-compose@graylog.service"
    owner: root
    group: root
    mode: 0600
  notify:
    - 'docker-graylog-restart'

- name: 'install | graylog | enable service'
  systemd:
    daemon_reload: yes
    name: "docker-compose@graylog"
    enabled: true
  ignore_errors: '{{ ansible_check_mode }}'

- name: 'install | graylog | enable service'
  systemd:
    state: restarted
    name: "docker-compose@graylog"
  ignore_errors: '{{ ansible_check_mode }}'
  when: reg_GRAYLOG_ROOT_PASSWORD_SHA2_password.changed == True or reg_graylog_env_secret.changed == True
