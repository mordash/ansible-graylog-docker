version: "3.3"

volumes:
  mongodb_data:
  os_data:
  data:
  journal:

networks:
  graylog:
{% if graylog_traefik_enable is defined %}
  traefik:
    external: true
{% endif %}

services:
  mongodb:
    image: mongo:{{ docker_image_mongodb }}
    container_name: graylog_mongodb
    restart: on-failure
    volumes:
      - mongodb_data:/data/db
    networks:
      - graylog
    logging:
      driver: syslog
      options:
        tag: docker_graylog-mongodb

  opensearch:
    image: opensearchproject/opensearch:{{ docker_image_opensearch }}
    container_name: graylog_opensearch
    restart: on-failure
    environment:
      OPENSEARCH_JAVA_OPTS: "{{ opensearch_java_memory_opts }}"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      action.auto_create_index: "false"
      plugins.security.ssl.http.enabled: "false"
      plugins.security.disabled: "true"
    ulimits:
      memlock:
        hard: -1
        soft: -1
    deploy:
      resources:
        limits:
          memory: {{ opensearch_memory }}
    volumes:
      - os_data:/usr/share/opensearch/data
    networks:
      - graylog
    logging:
      driver: syslog
      options:
        tag: docker_graylog-opensearch

  graylog:
    image: graylog/graylog:{{ docker_image_graylog }}
    container_name: graylog
    restart: unless-stopped
    depends_on:
      opensearch:
        condition: "service_started"
      mongodb:
        condition: "service_started"
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2}"
      GRAYLOG_ROOT_TIMEZONE: "Europe/Paris"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
{% if graylog_http_external_uri_var is defined %}
      GRAYLOG_HTTP_EXTERNAL_URI: "{{ graylog_http_external_uri_var }}"
{% endif %}
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
{% if graylog_email_enabled == true %}
      # mail
      GRAYLOG_TRANSPORT_EMAIL_ENABLED : "{{ graylog_email_enabled }}"
      GRAYLOG_TRANSPORT_EMAIL_HOSTNAME : "{{ graylog_email_hostname }}"
      GRAYLOG_TRANSPORT_EMAIL_PORT : "{{ graylog_email_port }}"
      GRAYLOG_TRANSPORT_EMAIL_USE_AUTH : "{{ graylog_email_use_auth }}"
      GRAYLOG_TRANSPORT_EMAIL_USE_TLS : "{{ graylog_email_use_tls }}"
      GRAYLOG_TRANSPORT_EMAIL_AUTH_USERNAME : "{{ graylog_email_auth_username }}"
      GRAYLOG_TRANSPORT_EMAIL_AUTH_PASSWORD : "{{ graylog_email_auth_password }}"
      GRAYLOG_TRANSPORT_EMAIL_FROM_EMAIL : "{{ graylog_email_from_email }}"
      GRAYLOG_TRANSPORT_EMAIL_SUBJECT_PREFIX : "{{ graylog_email_subject_prefix }}"
{% endif %}
    ports:
      - "5044:5044/tcp"   # Beats
      - "5140:5140/udp"   # Syslog
      - "{{ graylog_port_tcp_syslog }}:1514/tcp"   # Syslog
      - "5555:5555/tcp"   # RAW TCP
      - "5555:5555/udp"   # RAW TCP
      - "9000:9000/tcp"   # Server API
      - "12201:12201/tcp" # GELF TCP
      - "12201:12201/udp" # GELF UDP
      - "13301:13301/tcp" # Forwarder data
      - "13302:13302/tcp" # Forwarder config
{% if graylog_port_tcp_syslog_custom is defined %}
{% for item in graylog_port_tcp_syslog_custom|sort %}
      - "{{ item }}:{{ item }}/tcp" # Custom TCP port
{% endfor %}
{% endif %}
{% if graylog_port_udp_syslog_custom is defined %}
{% for item in graylog_port_udp_syslog_custom|sort %}
      - "{{ item }}:{{ item }}/udp" # Custom UDP port
{% endfor %}
{% endif %}
    volumes:
      - data:/usr/share/graylog/data
      - journal:/usr/share/graylog/data/journal
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - graylog
{% if graylog_traefik_enable is defined %}
      - traefik
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.http.routers.graylog.rule: "Host(`{{ graylog_url }}`)"
      traefik.http.routers.graylog.entrypoints: {{ graylog_traefik_entrypoints }}
      traefik.http.routers.graylog.tls: true
      traefik.http.routers.graylog.tls.certresolver: letsencrypt
      traefik.http.services.graylog.loadbalancer.server.port: {{ graylog_server_port }}
{% endif %}
    logging:
      driver: syslog
      options:
        tag: docker_graylog
